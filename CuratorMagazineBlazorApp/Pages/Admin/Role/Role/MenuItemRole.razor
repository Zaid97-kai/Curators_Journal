@using Microsoft.AspNetCore.Components
@using API.Models.Entities.Domains
@using API.Models.Authorization

<Table @ref="_table"
       TItem="ApplicationRoleListViewModel"
       DataSource="@_roles"
       Total="_total"
       RowClassName="@(_ => "editable-row")"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       @bind-SelectedRows="_selectedRows"
       OnChange="OnChange">
    <ChildContent Context="data">
        <Selection Key="@(data.Id)"/>
        <PropertyColumn Property="c => c.Id" Sortable>
            @if (!_editCache[data.Id.ToString()].edit)
            {
                @data.Id
            }
            else
            {
                <Input @bind-Value="_editCache[data.Id].data.Id"/>
            }
        </PropertyColumn>
        <PropertyColumn Property="c => c.RoleName" Sortable>
            @if (!_editCache[data.Id].edit)
            {
                @data.RoleName
            }
            else
            {
                <Input @bind-Value="_editCache[data.Id.ToString()].data.RoleName"/>
            }
        </PropertyColumn>
        <ActionColumn Title="Action">
            @if (!_editCache[data.Id.ToString()].edit)
            {
                <a @onclick="() => StartEdit(data.Id.ToString())">Edit</a>
            }
            else
            {
                <a @onclick="() => SaveEdit(data.Id.ToString())" class="save">Save</a>
                <Popconfirm Title="Sure to cancel?"
                            OnConfirm="() => CancelEdit(data.Id.ToString())"
                            OkText="Yes"
                            CancelText="No">
                    <a>Cancel</a>
                </Popconfirm>
            }
        </ActionColumn>
        <ActionColumn>
            <Space>
                <SpaceItem><Button Danger OnClick="() => Delete(Convert.ToInt32(data.Id))">Delete</Button></SpaceItem>
            </Space>
        </ActionColumn>
    </ChildContent>
</Table>

<br />
<p>Всего ролей: @_total</p>

<br />
<h5>Выбраны следующие элементы:</h5>
@if (_selectedRows != null && _selectedRows.Any())
{
    <Button Danger Size="small" OnClick="@(e => { _selectedRows = null; })">Clear</Button>

    @foreach (var selected in _selectedRows)
    {
        <Tag @key="selected.Id" Closable OnClose="e=>RemoveSelection(Convert.ToInt32(selected.Id))">@selected.Id - @selected.RoleName</Tag>
    }
}

<style>
    .save {
        margin-right: 8px;
    }
</style>
